name: dockerpush
on: [pull_request,push,issues,workflow_dispatch]
env:
  AZURE_WEBAPP_NAME: "GitActionAPI"
  AZURE_CONTAINER_NAME: "gitcollabapi"
  IMAGE_NAME: gitcollabapi
jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: catch Event Name
        run: echo "Event that triggered the work flow is ${{ github.event_name }}"
      - name: CheckingOut Repository
        uses: actions/checkout@v3
        
      - name: build-app
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
          
      - name: Install dependencies
        run: dotnet restore ./GitCollab/GitCollab.csproj
        
      - name: Build
        run: dotnet build ./GitCollab/GitCollab.csproj --configuration Release --no-restore

  Test:
    needs: Build
    runs-on: windows-latest
    steps:
      - name: CheckingOut Repository
        uses: actions/checkout@v3
        
      - name: Install TestCase dependencies
        run: dotnet restore ./TestingGitAPI/TestingGitAPI.csproj
        
      - name: Run Unit Tests
        run: dotnet test --configuration Release --no-restore --verbosity normal
        
      - name: Notify on Test Failure
        if: failure()
        run: echo "Tests failed! Fix errors before deployment."
        
  build-and-push:
    needs: Test
    runs-on: ubuntu-latest
   
    steps:
      - name: CheckingOut Repository
        uses: actions/checkout@v3
        
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.AZURE_REGISTRY_PASSWORD}}" | docker login ${{ secrets.AZURE_CONTAINER_REGISTRY }} -u ${{ secrets.AZURE_REGISTRY_USERNAME}} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$IMAGE_NAME:${{ github.sha }} -f GitCollab/Dockerfile GitCollab
          docker tag ${{ secrets.AZURE_CONTAINER_REGISTRY  }}/$IMAGE_NAME:${{ github.sha }} ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$IMAGE_NAME:latest

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$IMAGE_NAME:${{ github.sha }}
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$IMAGE_NAME:latest
